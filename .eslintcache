[{"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\index.js":"1","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\App.js":"2","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\routing\\Navbar.jsx":"3","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\routing\\Routes.jsx":"4","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\AuthContext.jsx":"5","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\category\\Categories.js":"6","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\Meals.js":"7","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\DetailMeal.js":"8","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\Carusel.js":"9","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\NotFound.jsx":"10","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\ProtectedLogin.jsx":"11","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\Logout.jsx":"12","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\Payment.jsx":"13","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\category\\Category.js":"14","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\Title.js":"15","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\Meal.js":"16","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\RightButton.js":"17","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\LeftButton.js":"18","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\RandomMealCarusel.js":"19","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\common\\axios.js":"20","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\loading\\Loading.js":"21","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\FavoriteMeal.jsx":"22","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\RandomMeal.js":"23","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\ProtectedRoute.jsx":"24","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\Register.jsx":"25","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\MainPage.jsx":"26","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\Login.jsx":"27","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\AppLogin.jsx":"28","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\AuthContext.jsx":"29","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\Register.jsx":"30","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\Favorites.jsx":"31","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\search\\SearchItems.jsx":"32","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\search\\Search.jsx":"33","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\search\\Input.jsx":"34","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\RightSide.jsx":"35","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\provider\\AddRecipes.jsx":"36","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\provider\\Recipes.jsx":"37"},{"size":327,"mtime":1612775345360,"results":"38","hashOfConfig":"39"},{"size":1088,"mtime":1613573888597,"results":"40","hashOfConfig":"39"},{"size":1158,"mtime":1613733408264,"results":"41","hashOfConfig":"39"},{"size":2167,"mtime":1613733408270,"results":"42","hashOfConfig":"39"},{"size":135,"mtime":1613573888598,"results":"43","hashOfConfig":"39"},{"size":1122,"mtime":1612470719822,"results":"44","hashOfConfig":"39"},{"size":2212,"mtime":1613733408209,"results":"45","hashOfConfig":"39"},{"size":2827,"mtime":1613733408201,"results":"46","hashOfConfig":"39"},{"size":2307,"mtime":1612470719821,"results":"47","hashOfConfig":"39"},{"size":121,"mtime":1610641029011,"results":"48","hashOfConfig":"39"},{"size":348,"mtime":1613573946958,"results":"49","hashOfConfig":"39"},{"size":412,"mtime":1613573946952,"results":"50","hashOfConfig":"39"},{"size":168,"mtime":1610641699516,"results":"51","hashOfConfig":"39"},{"size":583,"mtime":1613717620184,"results":"52","hashOfConfig":"39"},{"size":217,"mtime":1610641699556,"results":"53","hashOfConfig":"39"},{"size":940,"mtime":1612473993529,"results":"54","hashOfConfig":"39"},{"size":301,"mtime":1610641699555,"results":"55","hashOfConfig":"39"},{"size":297,"mtime":1610641699553,"results":"56","hashOfConfig":"39"},{"size":723,"mtime":1610641699554,"results":"57","hashOfConfig":"39"},{"size":218,"mtime":1612471277084,"results":"58","hashOfConfig":"39"},{"size":296,"mtime":1612470719825,"results":"59","hashOfConfig":"39"},{"size":828,"mtime":1613573946989,"results":"60","hashOfConfig":"39"},{"size":1035,"mtime":1610641699553,"results":"61","hashOfConfig":"39"},{"size":325,"mtime":1611609478518,"results":"62","hashOfConfig":"39"},{"size":3123,"mtime":1612470719819,"results":"63","hashOfConfig":"39"},{"size":455,"mtime":1613573946949,"results":"64","hashOfConfig":"39"},{"size":1970,"mtime":1613733408170,"results":"65","hashOfConfig":"39"},{"size":3831,"mtime":1613573946965,"results":"66","hashOfConfig":"39"},{"size":132,"mtime":1612470719827,"results":"67","hashOfConfig":"39"},{"size":3507,"mtime":1613733408184,"results":"68","hashOfConfig":"39"},{"size":2556,"mtime":1613733408204,"results":"69","hashOfConfig":"39"},{"size":2293,"mtime":1612471277105,"results":"70","hashOfConfig":"39"},{"size":669,"mtime":1613573947005,"results":"71","hashOfConfig":"39"},{"size":497,"mtime":1613573947001,"results":"72","hashOfConfig":"39"},{"size":365,"mtime":1613573946983,"results":"73","hashOfConfig":"39"},{"size":2129,"mtime":1613733408228,"results":"74","hashOfConfig":"39"},{"size":1043,"mtime":1613733408232,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1le58yf",{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"84"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"84"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"84"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"84"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"84"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"84"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"84"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"84"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"84"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"84"},"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\index.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\App.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\routing\\Navbar.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\routing\\Routes.jsx",[],["162","163"],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\AuthContext.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\category\\Categories.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\Meals.js",["164","165","166"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { axios, axiosSpring } from '../../common/axios';\r\nimport Loading from '../loading/Loading';\r\nimport Meal from './Meal';\r\n\r\nconst Meals = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [mealsApi, setMealsApi] = useState();\r\n  const [mealPrices, setMealPrices] = useState();\r\n  const [favorite, setFavorite] = useState();\r\n\r\n  const param = useParams();\r\n  const category = param.strCategory;\r\n\r\n  const getMealsApi = async () => {\r\n    const response = await axios\r\n      .get(`/filter.php?c=${category}`)\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setMealsApi(response.data.meals);\r\n    }\r\n  };\r\n\r\n  const getMealPrices = async () => {\r\n    const response = await axiosSpring\r\n      .get('/prices')\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setMealPrices(response.data);\r\n    }\r\n  };\r\n\r\n  const handleAdd = async (id, price) => {\r\n    let res = await axiosSpring.post('/favorites', {\r\n      id: `${id}`,\r\n      price: `${price}`,\r\n    });\r\n    if (res.status !== 200) {\r\n    }\r\n    setFavorite({ id: id, price: price });\r\n  };\r\n\r\n  const matchingPrices = async () => {\r\n    setLoading(true);\r\n    await getMealsApi();\r\n    await getMealPrices();\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    matchingPrices();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <main>\r\n        <Loading />\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"category-meals\">\r\n        <h2>{category}</h2>\r\n        <div className=\"meals-category\">\r\n          {mealsApi.map((meal) => {\r\n            return (\r\n              <Meal\r\n                key={meal.idMeal}\r\n                handleAdd={handleAdd}\r\n                {...meal}\r\n                price={\r\n                  mealPrices.filter((price) => {\r\n                    return price.id === parseInt(meal.idMeal);\r\n                  })[0].price\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Meals;\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\DetailMeal.js",["167"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { axios, axiosSpring } from '../../common/axios';\r\nimport Loading from '../loading/Loading';\r\n\r\nconst DetailMeal = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [detailMealApi, setDetailMealApi] = useState();\r\n  const [readMore, setReadMore] = useState(false);\r\n  const [mealPrices, setMealPrices] = useState();\r\n\r\n  const param = useParams();\r\n\r\n  const getDetailMealApi = async () => {\r\n    setLoading(true);\r\n    const response = await axios\r\n      .get(`/lookup.php?i=${param.id}`)\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setDetailMealApi(response.data.meals[0]);\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getMealPrices = async () => {\r\n    const response = await axiosSpring\r\n      .get('/prices')\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setMealPrices(response.data);\r\n    }\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    await axiosSpring.post('/favorites', {\r\n      id: `${detailMealApi.idMeal}`,\r\n      price: `${prices}`,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getDetailMealApi();\r\n    getMealPrices();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <main>\r\n        <Loading />\r\n      </main>\r\n    );\r\n  }\r\n  let prices = mealPrices.filter((price) => {\r\n    return price.id === parseInt(detailMealApi.idMeal);\r\n  })[0].price;\r\n\r\n  return (\r\n    <div className=\"detail-mail-container\">\r\n      <div className=\"header-detailMeal\">\r\n        <div className=\"text-name-detail-meal\">\r\n          <h3>{detailMealApi.strMeal}</h3>\r\n        </div>\r\n        <div className=\"detailMeal-page\">\r\n          <div>\r\n            <img\r\n              src={detailMealApi.strMealThumb}\r\n              className=\"photo\"\r\n              alt={detailMealApi.strMeal}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h5>Instructions:</h5>\r\n\r\n            <p className=\"description-meal\">\r\n              {readMore\r\n                ? detailMealApi.strInstructions\r\n                : `${detailMealApi.strInstructions.substring(0, 200)}...`}\r\n              <button\r\n                className=\"showBtn\"\r\n                onClick={() => setReadMore(!readMore)}\r\n              >\r\n                {readMore ? 'show less' : 'read more'}\r\n              </button>\r\n            </p>\r\n            <h5>Area food: {detailMealApi.strArea}</h5>\r\n            <p className=\"price\">Price {prices}$</p>\r\n\r\n            <div>\r\n              <button className=\"btn-detail-meal\" onClick={handleAdd}>\r\n                {' '}\r\n                add\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailMeal;\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\Carusel.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\NotFound.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\ProtectedLogin.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\Logout.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\Payment.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\category\\Category.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\Title.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\Meal.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\RightButton.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\LeftButton.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\RandomMealCarusel.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\common\\axios.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\loading\\Loading.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\FavoriteMeal.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\carusel\\RandomMeal.js",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\ProtectedRoute.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\authentication\\Register.jsx",[],["168","169"],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\MainPage.jsx",["170","171"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport Carusel from './carusel/Carusel';\r\nimport Categories from './category/Categories';\r\nimport Search from './search/Search';\r\n\r\n\r\nconst MainPage = () => {\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div>\r\n          <Carusel />\r\n        </div>\r\n        <Search />\r\n        <div className=\"\">\r\n          <Categories />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\Login.jsx",["172"],"import React, { useState, containerRef, useRef } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { axiosSpring } from '../../common/axios';\r\nimport Cookies from 'js-cookie';\r\nimport loginImg from '../../logo.png';\r\nimport './Style.scss';\r\n\r\nconst Login = () => {\r\n  const history = useHistory();\r\n  const [error, setError] = useState('');\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    login();\r\n  };\r\n\r\n  const login = async () => {\r\n    const object = {\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n    };\r\n\r\n    let res = await axiosSpring.post('/login', object);\r\n    console.log(res)\r\n\r\n    if (res.status === 200 && res.data) {\r\n      setError('');\r\n    \r\n      toast.success('Hi, ' + res.data.name + ' !');\r\n      Cookies.set('token', res.data.token);\r\n      history.push('/');\r\n      return true;\r\n    } else {\r\n      toast.error('Login not successful! Please check input data');\r\n      Cookies.remove('token', 'slide');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"base-container\" ref={containerRef}>\r\n      <Card.Body>\r\n        <div className=\"header\">Login</div>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleLogin}>\r\n          <Form.Group id=\"text\">\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control type=\"email\" ref={emailRef} required />\r\n          </Form.Group>\r\n          <Form.Group id=\"password\">\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control type=\"password\" ref={passwordRef} required />\r\n          </Form.Group>\r\n          <Button className=\"btn\" type=\"submit\">\r\n            Login\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\AppLogin.jsx",["173","174","175","176"],"import React, { useState, useEffect } from 'react';\r\nimport loginImg from '../../logo.png';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport RightSide from './RightSide';\r\nimport Cookies from 'js-cookie';\r\nimport './Style.scss';\r\n\r\nexport default function AppLogin() {\r\n  const [toggle, setToggle] = useState(false);\r\n  const [doSlide, setDoSlide] = useState();\r\n  const current = toggle ? 'Register' : 'Login';\r\n  const [rightSide, setRightSide] = useState('right');\r\n\r\n  //TODO de facut state la get cookie-uri! si de bagat dependency  pe slide sa se mute de pe register pe login\r\n  // const currentActive = isLoginActive ? 'login' : 'register';\r\n\r\n  const handleOnClick = () => {\r\n    setToggle(!toggle);\r\n    // if (Cookies.get('slide') || Cookies.get('token')) {\r\n    //   setToggle(true);\r\n    // }\r\n\r\n    if (rightSide === 'right') {\r\n      setRightSide('left');\r\n      // setToggle(!toggle);\r\n    } else {\r\n      setRightSide('right');\r\n      // setToggle(toggle);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if (Cookies.get('slide') || Cookies.get('token')) {\r\n    // setToggle(true);\r\n    // }\r\n  }, [toggle]);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"image\">\r\n            <img src={loginImg}></img>\r\n          </div>\r\n          {toggle ? (\r\n            <Login containerRef={current} />\r\n          ) : (\r\n            <Register containerRef={current} />\r\n          )}\r\n        </div>\r\n        <RightSide current={current} side={rightSide} onClick={handleOnClick} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// import React, { useState, useEffect, containerRef } from 'react';\r\n// import loginImg from '../../logo.png';\r\n// import Login from './Login';\r\n// import Register from './Register'\r\n// import './Style.scss';\r\n\r\n// class AppLogin extends React.Component {\r\n// constructor(props) {\r\n//   super(props);\r\n//   this.state = {\r\n//     isLogginActive: true\r\n//   };\r\n// }\r\n\r\n// componentDidMount() {\r\n//   //Add .right by default\r\n//   this.rightSide.classList.add(\"right\");\r\n// }\r\n\r\n// changeState() {\r\n//   const { isLogginActive } = this.state;\r\n\r\n//   if (isLogginActive) {\r\n//     this.rightSide.classList.remove(\"right\");\r\n//     this.rightSide.classList.add(\"left\");\r\n//   } else {\r\n//     this.rightSide.classList.remove(\"left\");\r\n//     this.rightSide.classList.add(\"right\");\r\n//   }\r\n//   this.setState(prevState => ({ isLogginActive: !prevState.isLogginActive }));\r\n// }\r\n\r\n// render() {\r\n//   const { isLogginActive } = this.state;\r\n//   const current = isLogginActive ? \"Register\" : \"Login\";\r\n//   const currentActive = isLogginActive ? \"login\" : \"register\";\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <div className=\"login\">\r\n//         <div className=\"container\" ref={ref => (this.container = ref)}>\r\n//         <div className='image'>\r\n//             <img src={loginImg}></img>\r\n//           </div>\r\n//           {isLogginActive && (\r\n//             <Login containerRef={ref => (this.current = ref)} />\r\n//           )}\r\n//           {!isLogginActive && (\r\n//             <Register containerRef={ref => (this.current = ref)} />\r\n//           )}\r\n//         </div>\r\n//         <RightSide\r\n//           current={current}\r\n//           currentActive={currentActive}\r\n//           containerRef={ref => (this.rightSide = ref)}\r\n//           onClick={this.changeState.bind(this)}\r\n//         />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n// }\r\n\r\n// const RightSide = props => {\r\n// return (\r\n//   <div\r\n//     className=\"right-side\"\r\n//     ref={props.containerRef}\r\n//     onClick={props.onClick}\r\n//   >\r\n//     <div className=\"inner-container\">\r\n//       <div className=\"text\">{props.current}</div>\r\n//     </div>\r\n//   </div>\r\n// );\r\n// };\r\n\r\n// export default AppLogin;\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\AuthContext.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\Register.jsx",["177","178","179"],"import React, { useState, useEffect, containerRef, useRef } from 'react';\r\nimport loginImg from '../../logo.png';\r\nimport { toast } from 'react-toastify';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { axiosSpring } from '../../common/axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport './Style.scss';\r\n\r\nexport default function Register() {\r\n  const [error, setError] = useState('');\r\n  const [provider, setProvider] = useState('');\r\n  const firstNameRef = useRef();\r\n  const lastNameRef = useRef();\r\n  const emailRef = useRef();\r\n  const passwordRef = useRef();\r\n  const passwordConfirmRef = useRef();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    register();\r\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\r\n      toast.error('Passwords do not match');\r\n    }\r\n  };\r\n\r\n  const register = async () => {\r\n    const object = {\r\n      firstName: firstNameRef.current.value,\r\n      lastName: lastNameRef.current.value,\r\n      email: emailRef.current.value,\r\n      password: passwordRef.current.value,\r\n      provider: provider\r\n    };\r\n\r\n    let res = await axiosSpring.post('/register', object);\r\n    if (res.status === 200 && res.data) {\r\n      setError('');\r\n      Cookies.set('slide', true);\r\n      toast.success('Registration successful!');\r\n      // window.location.href = 'http://localhost:3000';\r\n\r\n      return true;\r\n    }\r\n    toast.error('Register not successful! Please check input data');\r\n    return false;\r\n  };\r\n\r\n  return (\r\n    <Card className='base-container' ref={containerRef}>\r\n      <Card.Body>\r\n        <div className='header'>Register</div>\r\n        {error && <Alert variant='danger'>{error}</Alert>}\r\n        <Form className='form' onSubmit={handleSubmit}>\r\n          <div className='form-group'>\r\n            <Form.Group id='firstName'>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control type='text' ref={firstNameRef} required />\r\n            </Form.Group>\r\n          </div>\r\n          <div className='form-group'>\r\n            <Form.Group id='lastName'>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control type='text' ref={lastNameRef} required />\r\n            </Form.Group>\r\n          </div>\r\n          <div className='form-group'></div>\r\n          <div className='form-group'>\r\n            <Form.Group id='email'>\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type='text' ref={emailRef} required />\r\n            </Form.Group>\r\n          </div>\r\n          <div className='form-group'>\r\n            <Form.Group id='password'>\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type='password' ref={passwordRef} required />\r\n            </Form.Group>\r\n          </div>\r\n          <div className='form-group'>\r\n            <Form.Group id='password-confirm'>\r\n              <Form.Label>Password Confirmation</Form.Label>\r\n              <Form.Control type='password' ref={passwordConfirmRef} required />\r\n            </Form.Group>\r\n          </div>\r\n          <Button className='btn' type='submit'>\r\n            Register\r\n          </Button>\r\n        </Form>\r\n      </Card.Body>\r\n      <div>\r\n        <div className='checkbox'>Are you provider? </div>\r\n        <input\r\n          type='checkbox'\r\n          onClick={() => {\r\n            provider === true ? setProvider(false) : setProvider(true);\r\n          }}\r\n        />\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\meals\\Favorites.jsx",["180"],"import React, { useState, useEffect } from 'react';\r\nimport { axios, axiosSpring } from '../../common/axios';\r\nimport FavoriteMeal from './FavoriteMeal';\r\nimport Cookies from 'js-cookie';\r\nimport NotFound from '../NotFound';\r\n\r\nexport default function Favorites() {\r\n  const [mealsDb, setMealsDb] = useState([]);\r\n  const [mealsApi, setMealsApi] = useState([]);\r\n  const [token, setToken] = useState('');\r\n  const [notFound, setNotFound] = useState(true);\r\n\r\n  const getFavoritesMealsDb = async () => {\r\n    const response = await axiosSpring\r\n      .get(`/favoriteMeal`, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n      })\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setMealsDb(response.data);\r\n      return response.data;\r\n    }\r\n  };\r\n\r\n  const getMealsApi = async (meals) => {\r\n    let dataApi = [];\r\n    for (var i = 0; i < meals.length; i++) {\r\n      const response = await axios.get(`/lookup.php?i=${meals[i].id}`);\r\n      if (response && response.data) {\r\n        dataApi.push(response.data.meals[0]);\r\n      }\r\n    }\r\n    setMealsApi(dataApi);\r\n  };\r\n\r\n  const showMeals = async () => {\r\n    let meals = await getFavoritesMealsDb();\r\n    await getMealsApi(meals);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setToken(Cookies.get('token'));\r\n\r\n    if (token && token !== '') {\r\n      setNotFound(false);\r\n      showMeals();\r\n    }\r\n  }, [token]);\r\n\r\n  const handleDelete = async (id) => {\r\n    let removeMealDbById = mealsApi.filter((meal) => meal.idMeal !== id);\r\n    await axiosSpring.delete(`/favorites/${id}`, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + token,\r\n      },\r\n    });\r\n    setMealsApi(removeMealDbById);\r\n  };\r\n\r\n  if (notFound) {\r\n    return (\r\n      <main>\r\n        <NotFound />\r\n      </main>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div>\r\n            <h2 className=\"\">My favorites</h2>\r\n          </div>\r\n          <div className=\"display-categories\">\r\n            {mealsApi.map((product) => {\r\n              return (\r\n                <FavoriteMeal\r\n                  key={product.idMeal}\r\n                  handleDelete={handleDelete}\r\n                  {...product}\r\n                  price={\r\n                    mealsDb.filter((price) => {\r\n                      return price.id === parseInt(product.idMeal);\r\n                    })[0].price\r\n                  }\r\n                />\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\search\\SearchItems.jsx",["181"],"import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { axios, axiosSpring } from '../../common/axios';\r\n\r\nimport Meal from '../meals/Meal';\r\n// import PageLoader from '../loading/Loading';\r\n\r\nexport default function SearchItems() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [mealsByIngredient, setMealsByIngredient] = useState();\r\n  const [mealPrices, setMealPrices] = useState();\r\n  const [favorite, setFavorite] = useState();\r\n\r\n  const param = useParams();\r\n  const ingredient = param.mainIngredient;\r\n\r\n  const getMealsApi = async () => {\r\n    const response = await axios\r\n      .get(`/filter.php?i=${ingredient}`)\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setMealsByIngredient(response.data.meals);\r\n    }\r\n  };\r\n\r\n  const getMealPrices = async () => {\r\n    const response = await axiosSpring\r\n      .get('/prices')\r\n      .catch((err) => console.log('Error:', err));\r\n    if (response && response.data) {\r\n      setMealPrices(response.data);\r\n    }\r\n  };\r\n\r\n  const handleAdd = async (id, price) => {\r\n    let res = await axiosSpring.post('/favorites', {\r\n      id: `${id}`,\r\n      price: `${price}`,\r\n    });\r\n    if (res.status !== 200) {\r\n      console.log(favorite);\r\n    }\r\n    setFavorite({ id: id, price: price });\r\n  };\r\n\r\n  const matchingPrices = async () => {\r\n    setLoading(true);\r\n    await getMealsApi();\r\n    await getMealPrices();\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    matchingPrices();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return (\r\n      <main>\r\n        <loading />\r\n      </main>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"category-meals\">\r\n        <h2>Selections having {ingredient}</h2>\r\n        <div className=\"meals-category\">\r\n          {mealsByIngredient.map((meal) => {\r\n            return (\r\n              <Meal\r\n                key={meal.idMeal}\r\n                handleAdd={handleAdd}\r\n                {...meal}\r\n                price={\r\n                  mealPrices.filter((price) => {\r\n                    return price.id === parseInt(meal.idMeal);\r\n                  })[0].price\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\search\\Search.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\search\\Input.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\login\\RightSide.jsx",[],"W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\provider\\AddRecipes.jsx",["182"],"import React,{useRef, containerRef, useState} from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport { Form, Button, Card, Alert } from 'react-bootstrap';\r\nimport { axiosSpring } from '../../common/axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Cookies from 'js-cookie';\r\nimport './StyleProvider.scss'\r\n\r\nexport default function AddRecipes() {\r\n\r\n    const [error, setError] = useState('');\r\n    const recipeNameRef = useRef();\r\n    const descriptionRef = useRef();\r\n   \r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      register();\r\n\r\n    };\r\n  \r\n    const register = async () => {\r\n      const object = {\r\n        name: recipeNameRef.current.value,\r\n        description:  descriptionRef.current.value,\r\n      };\r\n  \r\n      let res = await axiosSpring.post('/recipes/addRecipe', object,{\r\n          headers:{\r\n              Authorization:'Bearer '+ Cookies.get('token')\r\n          }\r\n      });\r\n       console.log(\"res\",res)\r\n      if (res.status === 201) {\r\n        setError('')\r\n        toast.success('Recipe was added!');\r\n        // window.location.href = 'http://localhost:3000';\r\n        return true;\r\n      }\r\n      toast.error('Try again');\r\n      return false;\r\n    };\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"recipe\" ref={containerRef}>\r\n        <Card.Body>\r\n          <div className='header-recipe'>Recipe</div>\r\n          {error && <Alert variant='danger'>{error}</Alert>}\r\n          <Form className='form' onSubmit={handleSubmit}>\r\n            <div className='form-group'>\r\n              <Form.Group id='name'>\r\n                <Form.Label> Recipe Name</Form.Label>\r\n                <Form.Control type='text' ref={recipeNameRef} required />\r\n              </Form.Group>\r\n            </div>\r\n            <Form.Label>Description</Form.Label>\r\n            <textarea className='form-group' type='textarea' ref={descriptionRef} required >\r\n        \r\n            </textarea>\r\n           \r\n            <Button className='btn' type='submit'>\r\n              Add recipe\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n","W:\\CODECOOL\\ADVANCE\\Glovo-FrontEnd\\src\\components\\provider\\Recipes.jsx",["183","184"],"import React,{useState,useEffect} from 'react'\r\nimport { axiosSpring } from '../../common/axios';\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\nexport default function Recipes() {\r\n\r\n    const[recipes, setRecipes]=useState([])\r\n    const [token, setToken] = useState('');\r\n  const [notFound, setNotFound] = useState(true);\r\n  \r\n    const getAllRecipes = async () =>{\r\n    const response = await axiosSpring\r\n    .get(`/recipes/all`, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + Cookies.get('token'),\r\n      },\r\n    })\r\n    .catch((err) => console.log('Error:', err));\r\n    console.log(response)\r\n  if (response.status===201 && response.data) {\r\n    console.log(\"data\",response);\r\n    setRecipes(response.data)\r\n    return response.data;\r\n  }}\r\n console.log( \"get\",getAllRecipes())\r\n\r\n useEffect(() => {\r\n    setToken(Cookies.get('token'));\r\n    if (token && token !== '') {\r\n      setNotFound(false)\r\n    }\r\n  }, [token]);\r\n\r\n    return (\r\n        <div>\r\n            CEVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\r\n        </div>\r\n    )\r\n}\r\n\r\n",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":11,"column":10,"nodeType":"191","messageId":"192","endLine":11,"endColumn":18},{"ruleId":"189","severity":1,"message":"193","line":36,"column":9,"nodeType":"191","messageId":"192","endLine":36,"endColumn":12},{"ruleId":"194","severity":1,"message":"195","line":54,"column":6,"nodeType":"196","endLine":54,"endColumn":8,"suggestions":"197"},{"ruleId":"194","severity":1,"message":"198","line":44,"column":6,"nodeType":"196","endLine":44,"endColumn":8,"suggestions":"199"},{"ruleId":"185","replacedBy":"200"},{"ruleId":"187","replacedBy":"201"},{"ruleId":"189","severity":1,"message":"202","line":1,"column":17,"nodeType":"191","messageId":"192","endLine":1,"endColumn":25},{"ruleId":"189","severity":1,"message":"203","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"204","line":7,"column":8,"nodeType":"191","messageId":"192","endLine":7,"endColumn":16},{"ruleId":"189","severity":1,"message":"205","line":6,"column":8,"nodeType":"191","messageId":"192","endLine":6,"endColumn":15},{"ruleId":"189","severity":1,"message":"206","line":11,"column":10,"nodeType":"191","messageId":"192","endLine":11,"endColumn":17},{"ruleId":"189","severity":1,"message":"207","line":11,"column":19,"nodeType":"191","messageId":"192","endLine":11,"endColumn":29},{"ruleId":"208","severity":1,"message":"209","line":44,"column":13,"nodeType":"210","endLine":44,"endColumn":33},{"ruleId":"189","severity":1,"message":"203","line":1,"column":27,"nodeType":"191","messageId":"192","endLine":1,"endColumn":36},{"ruleId":"189","severity":1,"message":"204","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"211","line":6,"column":10,"nodeType":"191","messageId":"192","endLine":6,"endColumn":14},{"ruleId":"194","severity":1,"message":"212","line":50,"column":6,"nodeType":"196","endLine":50,"endColumn":13,"suggestions":"213"},{"ruleId":"194","severity":1,"message":"195","line":55,"column":6,"nodeType":"196","endLine":55,"endColumn":8,"suggestions":"214"},{"ruleId":"189","severity":1,"message":"211","line":5,"column":10,"nodeType":"191","messageId":"192","endLine":5,"endColumn":14},{"ruleId":"189","severity":1,"message":"215","line":8,"column":11,"nodeType":"191","messageId":"192","endLine":8,"endColumn":18},{"ruleId":"189","severity":1,"message":"216","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":18},"no-native-reassign",["217"],"no-negated-in-lhs",["218"],"no-unused-vars","'favorite' is assigned a value but never used.","Identifier","unusedVar","'res' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'matchingPrices'. Either include it or remove the dependency array.","ArrayExpression",["219"],"React Hook useEffect has a missing dependency: 'getDetailMealApi'. Either include it or remove the dependency array.",["220"],["217"],["218"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'loginImg' is defined but never used.","'Cookies' is defined but never used.","'doSlide' is assigned a value but never used.","'setDoSlide' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'showMeals'. Either include it or remove the dependency array.",["221"],["222"],"'recipes' is assigned a value but never used.","'notFound' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"223","fix":"229"},"Update the dependencies array to be: [matchingPrices]",{"range":"230","text":"231"},"Update the dependencies array to be: [getDetailMealApi]",{"range":"232","text":"233"},"Update the dependencies array to be: [showMeals, token]",{"range":"234","text":"235"},{"range":"236","text":"231"},[1483,1485],"[matchingPrices]",[1277,1279],"[getDetailMealApi]",[1425,1432],"[showMeals, token]",[1561,1563]]